//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/InputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputManager : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputManager()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputManager"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""0dc626d3-2160-4609-a26a-8ac357d9ae31"",
            ""actions"": [
                {
                    ""name"": ""DS"",
                    ""type"": ""Button"",
                    ""id"": ""808912c2-71af-4a26-9223-9b3ca81a56fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DW"",
                    ""type"": ""Button"",
                    ""id"": ""7f52196d-1a43-4c86-a5c5-d0bf6357c166"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""5ca42b65-2c9e-4e14-aabe-11724115c7a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotationW"",
                    ""type"": ""Button"",
                    ""id"": ""ff455e7d-f5f8-4603-8b83-a9dc8bc57b4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotationS"",
                    ""type"": ""Button"",
                    ""id"": ""cb2a6de9-d9b0-4883-b2ab-8a1adcc6eadf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AS"",
                    ""type"": ""Button"",
                    ""id"": ""788bb1d4-941e-4635-b857-883c9271d5d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""0aef1505-8d49-4a12-9008-a3e5b0a6cb64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AW"",
                    ""type"": ""Button"",
                    ""id"": ""53c13142-19c3-491c-b3a4-393e63ff62cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""DS"",
                    ""id"": ""8df18279-b187-46ff-a3f9-d8c48adfbb18"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DS"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d0b46b02-bb3c-488e-8326-9745bc043548"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""32a5999b-c386-48c9-b994-5ec1b6fe2906"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a5aa31ce-ba92-47d8-bd30-653b25b123fc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AS"",
                    ""id"": ""e550f79b-9589-4869-a06e-8e2788541874"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AS"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""46de47fa-bcf1-4e24-9ed7-e5a171d58010"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""f599fef4-4050-4fa9-a222-b3b229a984ed"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AW"",
                    ""id"": ""ae3d3730-43e4-4bfa-9163-ba4c4a40e66d"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AW"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8bbd3e34-c544-40a9-b1d1-196eede07bd6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""e2b0d5ff-2675-43f3-ac45-198341708060"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0a3f8453-3e37-4f86-8a22-daa9d7e9b899"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81f0fb77-e390-4d02-9cae-6ab2897f0265"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f825357b-cade-4e1f-bec0-35e1efef5ad3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""DW"",
                    ""id"": ""21774a1e-cb47-4dd7-bcc3-ae344c61886f"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DW"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""94a2ebc2-8156-4e28-82dd-e201ce31c564"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""6a57cbe9-57c3-4ec6-983a-106c7db3d1d8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<VirtualMouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_DS = m_Player.FindAction("DS", throwIfNotFound: true);
        m_Player_DW = m_Player.FindAction("DW", throwIfNotFound: true);
        m_Player_D = m_Player.FindAction("D", throwIfNotFound: true);
        m_Player_RotationW = m_Player.FindAction("RotationW", throwIfNotFound: true);
        m_Player_RotationS = m_Player.FindAction("RotationS", throwIfNotFound: true);
        m_Player_AS = m_Player.FindAction("AS", throwIfNotFound: true);
        m_Player_A = m_Player.FindAction("A", throwIfNotFound: true);
        m_Player_AW = m_Player.FindAction("AW", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_DS;
    private readonly InputAction m_Player_DW;
    private readonly InputAction m_Player_D;
    private readonly InputAction m_Player_RotationW;
    private readonly InputAction m_Player_RotationS;
    private readonly InputAction m_Player_AS;
    private readonly InputAction m_Player_A;
    private readonly InputAction m_Player_AW;
    public struct PlayerActions
    {
        private @InputManager m_Wrapper;
        public PlayerActions(@InputManager wrapper) { m_Wrapper = wrapper; }
        public InputAction @DS => m_Wrapper.m_Player_DS;
        public InputAction @DW => m_Wrapper.m_Player_DW;
        public InputAction @D => m_Wrapper.m_Player_D;
        public InputAction @RotationW => m_Wrapper.m_Player_RotationW;
        public InputAction @RotationS => m_Wrapper.m_Player_RotationS;
        public InputAction @AS => m_Wrapper.m_Player_AS;
        public InputAction @A => m_Wrapper.m_Player_A;
        public InputAction @AW => m_Wrapper.m_Player_AW;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @DS.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDS;
                @DS.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDS;
                @DS.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDS;
                @DW.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDW;
                @DW.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDW;
                @DW.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDW;
                @D.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnD;
                @D.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnD;
                @D.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnD;
                @RotationW.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotationW;
                @RotationW.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotationW;
                @RotationW.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotationW;
                @RotationS.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotationS;
                @RotationS.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotationS;
                @RotationS.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotationS;
                @AS.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAS;
                @AS.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAS;
                @AS.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAS;
                @A.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnA;
                @AW.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAW;
                @AW.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAW;
                @AW.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAW;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DS.started += instance.OnDS;
                @DS.performed += instance.OnDS;
                @DS.canceled += instance.OnDS;
                @DW.started += instance.OnDW;
                @DW.performed += instance.OnDW;
                @DW.canceled += instance.OnDW;
                @D.started += instance.OnD;
                @D.performed += instance.OnD;
                @D.canceled += instance.OnD;
                @RotationW.started += instance.OnRotationW;
                @RotationW.performed += instance.OnRotationW;
                @RotationW.canceled += instance.OnRotationW;
                @RotationS.started += instance.OnRotationS;
                @RotationS.performed += instance.OnRotationS;
                @RotationS.canceled += instance.OnRotationS;
                @AS.started += instance.OnAS;
                @AS.performed += instance.OnAS;
                @AS.canceled += instance.OnAS;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @AW.started += instance.OnAW;
                @AW.performed += instance.OnAW;
                @AW.canceled += instance.OnAW;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnDS(InputAction.CallbackContext context);
        void OnDW(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnRotationW(InputAction.CallbackContext context);
        void OnRotationS(InputAction.CallbackContext context);
        void OnAS(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnAW(InputAction.CallbackContext context);
    }
}
